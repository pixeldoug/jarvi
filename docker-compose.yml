version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=./jarvi.db
      - JWT_SECRET=your-secret-key-change-in-production
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - jarvi-network

  # Web Application
  web:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:3001/api
    volumes:
      - ./packages/web:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - jarvi-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=jarvi
      - POSTGRES_USER=jarvi_user
      - POSTGRES_PASSWORD=jarvi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jarvi-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jarvi-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - web
    networks:
      - jarvi-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  jarvi-network:
    driver: bridge 